{"ast":null,"code":"import { Util } from '../services/util';\nimport { AuthService } from '../services/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction LoginComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Content to render when condition is true.\");\n    i0.ɵɵelementEnd();\n  }\n}\nclass LoginComponent {\n  constructor(http) {\n    this.http = http;\n    this.token = \"\";\n  }\n  ngOnInit() {\n    this.token = AuthService.getToken();\n  }\n  login(form) {\n    // console.log(data)\n    this.http.post(Util.authServerUrl + \"login\", form).subscribe(success => {\n      console.log(success.token);\n      AuthService.setToken(success.token);\n    }, error => console.log(error.error));\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 16,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [\"id\", \"userDiv\"], [3, \"ngSubmit\"], [\"loginForm\", \"ngForm\"], [\"type\", \"text\", \"name\", \"email\", \"ngModel\", \"\", \"placeholder\", \"email\"], [\"type\", \"password\", \"name\", \"password\", \"ngModel\", \"\", \"placeholder\", \"password\"], [\"type\", \"submit\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r2 = i0.ɵɵgetCurrentView();\n      i0.ɵɵtemplate(0, LoginComponent_div_0_Template, 2, 0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelement(2, \"br\")(3, \"br\")(4, \"br\");\n      i0.ɵɵtext(5, \"LOGIN \");\n      i0.ɵɵelementStart(6, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n        i0.ɵɵrestoreView(_r2);\n        const _r1 = i0.ɵɵreference(7);\n        return i0.ɵɵresetView(ctx.login(_r1.value));\n      });\n      i0.ɵɵelement(8, \"input\", 4)(9, \"br\")(10, \"br\")(11, \"input\", 5)(12, \"br\")(13, \"br\");\n      i0.ɵɵelementStart(14, \"button\", 6);\n      i0.ɵɵtext(15, \"login\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.condition);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  encapsulation: 2\n});\nexport { LoginComponent };","map":{"version":3,"names":["Util","AuthService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","http","token","ngOnInit","getToken","login","form","post","authServerUrl","subscribe","success","console","log","setToken","error","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵtemplate","LoginComponent_div_0_Template","ɵɵelement","ɵɵlistener","LoginComponent_Template_form_ngSubmit_6_listener","ɵɵrestoreView","_r2","_r1","ɵɵreference","ɵɵresetView","value","ɵɵproperty","condition"],"sources":["C:\\Users\\bruno\\Desktop\\Phoenix-Cinema\\front\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { LoginResponse, Util } from '../services/util';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  template: `\r\n\r\n    <div *ngIf=\"condition\">Content to render when condition is true.</div>\r\n    <div id=\"userDiv\"> \r\n      <br><br><br>LOGIN\r\n      <form #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm.value)\">\r\n        <input type=\"text\" name=\"email\" ngModel placeholder=\"email\"><br><br>\r\n        <input type=\"password\" name=\"password\" ngModel placeholder=\"password\"><br><br>\r\n        <button type=\"submit\">login</button>\r\n\r\n      </form>\r\n\r\n\r\n    </div>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class LoginComponent {\r\n  public token : string | null = \"\";\r\n  constructor(private http: HttpClient){ }\r\n\r\n  ngOnInit(): void {\r\n    this.token = AuthService.getToken()\r\n  }\r\n\r\n  login(form: any){\r\n    // console.log(data)\r\n    this.http.post<LoginResponse>(Util.authServerUrl+\"login\",form).subscribe(\r\n      success => {\r\n        console.log(success.token)\r\n        AuthService.setToken(success.token)\r\n      },\r\n      error => console.log(error.error)\r\n    )\r\n  }\r\n\r\n}\r\n"],"mappings":"AAEA,SAAwBA,IAAI,QAAQ,kBAAkB;AACtD,SAASC,WAAW,QAAQ,0BAA0B;;;;;;;IAMlDC,EAAA,CAAAC,cAAA,UAAuB;IAAAD,EAAA,CAAAE,MAAA,gDAAyC;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;AAJ1E,MAoBaC,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADjB,KAAAC,KAAK,GAAmB,EAAE;EACM;EAEvCC,QAAQA,CAAA;IACN,IAAI,CAACD,KAAK,GAAGR,WAAW,CAACU,QAAQ,EAAE;EACrC;EAEAC,KAAKA,CAACC,IAAS;IACb;IACA,IAAI,CAACL,IAAI,CAACM,IAAI,CAAgBd,IAAI,CAACe,aAAa,GAAC,OAAO,EAACF,IAAI,CAAC,CAACG,SAAS,CACtEC,OAAO,IAAG;MACRC,OAAO,CAACC,GAAG,CAACF,OAAO,CAACR,KAAK,CAAC;MAC1BR,WAAW,CAACmB,QAAQ,CAACH,OAAO,CAACR,KAAK,CAAC;IACrC,CAAC,EACDY,KAAK,IAAIH,OAAO,CAACC,GAAG,CAACE,KAAK,CAACA,KAAK,CAAC,CAClC;EACH;;AAjBWf,cAAc,C;mBAAdA,cAAc,EAAAJ,EAAA,CAAAoB,iBAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdlB,cAAc,C;QAAdA,cAAc;EAAAmB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;MAhBvB7B,EAAA,CAAA+B,UAAA,IAAAC,6BAAA,iBAAsE;MACtEhC,EAAA,CAAAC,cAAA,aAAkB;MAChBD,EAAA,CAAAiC,SAAA,SAAI;MAAQjC,EAAA,CAAAE,MAAA,aACZ;MAAAF,EAAA,CAAAC,cAAA,iBAA8D;MAApCD,EAAA,CAAAkC,UAAA,sBAAAC,iDAAA;QAAAnC,EAAA,CAAAoC,aAAA,CAAAC,GAAA;QAAA,MAAAC,GAAA,GAAAtC,EAAA,CAAAuC,WAAA;QAAA,OAAYvC,EAAA,CAAAwC,WAAA,CAAAV,GAAA,CAAApB,KAAA,CAAA4B,GAAA,CAAAG,KAAA,CAAsB;MAAA,EAAC;MAC3DzC,EAAA,CAAAiC,SAAA,eAA4D;MAE5DjC,EAAA,CAAAC,cAAA,iBAAsB;MAAAD,EAAA,CAAAE,MAAA,aAAK;MAAAF,EAAA,CAAAG,YAAA,EAAS;;;MANlCH,EAAA,CAAA0C,UAAA,SAAAZ,GAAA,CAAAa,SAAA,CAAe;;;;;;SAgBZvC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}