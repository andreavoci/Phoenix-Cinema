{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Util } from '../services/util';\nimport { AuthService } from '../services/auth.service';\nlet LoginComponent = class LoginComponent {\n  constructor(http) {\n    this.http = http;\n    this.token = null;\n  }\n  ngOnInit() {\n    this.token = AuthService.getToken(\"token\");\n    console.log(this.token);\n  }\n  login(form) {\n    // console.log(data)\n    this.http.post(Util.authServerUrl + \"login\", form).subscribe(success => {\n      console.log(success.token);\n      AuthService.setToken(\"token\", success.token);\n      window.location.reload();\n    }, error => {\n      console.log(error.error);\n      let element = document.getElementById(\"loginform-error\");\n      if (element != null) {\n        element.innerHTML = error.error;\n      }\n    });\n  }\n  logout() {\n    console.log(\"delete\");\n    AuthService.deleteToken(\"token\");\n    window.location.reload();\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  template: `\n\n    <div *ngIf=\"token != null; else elseBlock\"> \n      <p>questo è il token dell'utente salvato : {{token}}</p>\n      \n      <button (click)=\"logout()\" type=\"submit\">Logout</button>\n\n    </div>\n    <ng-template #elseBlock>\n      <div id=\"userDiv\"> \n        <br><br><br>LOGIN\n        <form #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm.value)\">\n          <input type=\"text\" name=\"email\" ngModel placeholder=\"email\"><br><br>\n          <input type=\"password\" name=\"password\" ngModel placeholder=\"password\"><br><br>\n          <b><p style=\"color:red;weight:bold\" id=\"loginform-error\" ><p><b>\n          <button type=\"submit\">Login</button>\n        </form>\n\n\n      </div>\n    </ng-template>\n  `,\n  styles: []\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","Util","AuthService","LoginComponent","constructor","http","token","ngOnInit","getToken","console","log","login","form","post","authServerUrl","subscribe","success","setToken","window","location","reload","error","element","document","getElementById","innerHTML","logout","deleteToken","__decorate","selector","template","styles"],"sources":["C:\\Users\\bruno\\Desktop\\Phoenix-Cinema\\front\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { LoginResponse, Util } from '../services/util';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  template: `\r\n\r\n    <div *ngIf=\"token != null; else elseBlock\"> \r\n      <p>questo è il token dell'utente salvato : {{token}}</p>\r\n      \r\n      <button (click)=\"logout()\" type=\"submit\">Logout</button>\r\n\r\n    </div>\r\n    <ng-template #elseBlock>\r\n      <div id=\"userDiv\"> \r\n        <br><br><br>LOGIN\r\n        <form #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm.value)\">\r\n          <input type=\"text\" name=\"email\" ngModel placeholder=\"email\"><br><br>\r\n          <input type=\"password\" name=\"password\" ngModel placeholder=\"password\"><br><br>\r\n          <b><p style=\"color:red;weight:bold\" id=\"loginform-error\" ><p><b>\r\n          <button type=\"submit\">Login</button>\r\n        </form>\r\n\r\n\r\n      </div>\r\n    </ng-template>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class LoginComponent {\r\n  public token : string | null = null;\r\n  constructor(private http: HttpClient){ }\r\n\r\n  ngOnInit(): void {\r\n    this.token = AuthService.getToken(\"token\")\r\n    console.log(this.token)\r\n  }\r\n\r\n  login(form: any){\r\n    // console.log(data)\r\n    this.http.post<LoginResponse>(Util.authServerUrl+\"login\",form).subscribe(\r\n      success => {\r\n        console.log(success.token)\r\n        AuthService.setToken(\"token\",success.token)\r\n        window.location.reload()\r\n      },\r\n      error => {\r\n        console.log(error.error)\r\n        let element = document.getElementById(\"loginform-error\")\r\n        if(element != null){\r\n          element.innerHTML = error.error\r\n        }\r\n      }\r\n\r\n    )\r\n  }\r\n  \r\n\r\n  logout(){\r\n     console.log(\"delete\")\r\n    \r\n    AuthService.deleteToken(\"token\")\r\n    window.location.reload()\r\n  }\r\n\r\n}\r\n"],"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAwBC,IAAI,QAAQ,kBAAkB;AACtD,SAASC,WAAW,QAAQ,0BAA0B;AA6BtD,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADjB,KAAAC,KAAK,GAAmB,IAAI;EACI;EAEvCC,QAAQA,CAAA;IACN,IAAI,CAACD,KAAK,GAAGJ,WAAW,CAACM,QAAQ,CAAC,OAAO,CAAC;IAC1CC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,KAAK,CAAC;EACzB;EAEAK,KAAKA,CAACC,IAAS;IACb;IACA,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAgBZ,IAAI,CAACa,aAAa,GAAC,OAAO,EAACF,IAAI,CAAC,CAACG,SAAS,CACtEC,OAAO,IAAG;MACRP,OAAO,CAACC,GAAG,CAACM,OAAO,CAACV,KAAK,CAAC;MAC1BJ,WAAW,CAACe,QAAQ,CAAC,OAAO,EAACD,OAAO,CAACV,KAAK,CAAC;MAC3CY,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;IAC1B,CAAC,EACDC,KAAK,IAAG;MACNZ,OAAO,CAACC,GAAG,CAACW,KAAK,CAACA,KAAK,CAAC;MACxB,IAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC;MACxD,IAAGF,OAAO,IAAI,IAAI,EAAC;QACjBA,OAAO,CAACG,SAAS,GAAGJ,KAAK,CAACA,KAAK;;IAEnC,CAAC,CAEF;EACH;EAGAK,MAAMA,CAAA;IACHjB,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IAEtBR,WAAW,CAACyB,WAAW,CAAC,OAAO,CAAC;IAChCT,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;EAC1B;CAED;AApCYjB,cAAc,GAAAyB,UAAA,EA3B1B5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,WAAW;EACrBC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;GAqBT;EACDC,MAAM,EAAE;CAET,CAAC,C,EACW5B,cAAc,CAoC1B;SApCYA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}