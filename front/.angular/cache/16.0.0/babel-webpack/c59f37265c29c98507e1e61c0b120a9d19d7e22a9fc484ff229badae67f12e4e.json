{"ast":null,"code":"export class AuthService {\n  static setToken(key, value) {\n    // First, serialize it (but just if token is not string type).\n    // const tokenString:string = JSON.stringify( token );\n    localStorage.setItem(key, value);\n  }\n  // READ the token from localstorage and Deserialize\n  static getToken(key) {\n    let token = localStorage.getItem(key);\n    return token;\n  }\n  static deleteToken(key) {\n    let token = localStorage.removeItem(key);\n  }\n}","map":{"version":3,"names":["AuthService","setToken","key","value","localStorage","setItem","getToken","token","getItem","deleteToken","removeItem"],"sources":["C:\\Users\\bruno\\Desktop\\Phoenix-Cinema\\front\\src\\app\\services\\auth.service.ts"],"sourcesContent":["\r\nexport class AuthService {\r\n    static setToken(key:string, value:string){\r\n\r\n        // First, serialize it (but just if token is not string type).\r\n        // const tokenString:string = JSON.stringify( token );\r\n    \r\n        localStorage.setItem(key, value);\r\n    }\r\n    \r\n    // READ the token from localstorage and Deserialize\r\n    static getToken(key:string): string | null{\r\n    \r\n        let token = localStorage.getItem( key );\r\n    \r\n    return token;\r\n    }\r\n    \r\n    static deleteToken(key:string): void{\r\n    \r\n        let token = localStorage.removeItem(key);\r\n    \r\n    }\r\n}"],"mappings":"AACA,OAAM,MAAOA,WAAW;EACpB,OAAOC,QAAQA,CAACC,GAAU,EAAEC,KAAY;IAEpC;IACA;IAEAC,YAAY,CAACC,OAAO,CAACH,GAAG,EAAEC,KAAK,CAAC;EACpC;EAEA;EACA,OAAOG,QAAQA,CAACJ,GAAU;IAEtB,IAAIK,KAAK,GAAGH,YAAY,CAACI,OAAO,CAAEN,GAAG,CAAE;IAE3C,OAAOK,KAAK;EACZ;EAEA,OAAOE,WAAWA,CAACP,GAAU;IAEzB,IAAIK,KAAK,GAAGH,YAAY,CAACM,UAAU,CAACR,GAAG,CAAC;EAE5C"},"metadata":{},"sourceType":"module","externalDependencies":[]}